import networkx as nx
import pandas as pd

# Створюємо граф
G = nx.DiGraph()

# Пропускні здатності між вузлами
edges = [
    ("Термінал 1", "Склад 1", 25),
    ("Термінал 1", "Склад 2", 20),
    ("Термінал 1", "Склад 3", 15),
    ("Термінал 2", "Склад 3", 15),
    ("Термінал 2", "Склад 4", 30),
    ("Термінал 2", "Склад 2", 10),
    ("Склад 1", "Магазин 1", 15),
    ("Склад 1", "Магазин 2", 10),
    ("Склад 1", "Магазин 3", 20),
    ("Склад 2", "Магазин 4", 15),
    ("Склад 2", "Магазин 5", 10),
    ("Склад 2", "Магазин 6", 25),
    ("Склад 3", "Магазин 7", 20),
    ("Склад 3", "Магазин 8", 15),
    ("Склад 3", "Магазин 9", 10),
    ("Склад 4", "Магазин 10", 20),
    ("Склад 4", "Магазин 11", 10),
    ("Склад 4", "Магазин 12", 15),
    ("Склад 4", "Магазин 13", 5),
    ("Склад 4", "Магазин 14", 10),
]

# Додаємо ребра в граф
G.add_weighted_edges_from(edges, weight='capacity')

# Джерело і стік
G.add_edge("Джерело", "Термінал 1", capacity=60)
G.add_edge("Джерело", "Термінал 2", capacity=55)

for i in range(1, 15):
    G.add_edge(f"Магазин {i}", "Стік", capacity=100)

# Алгоритм максимального потоку
flow_value, flow_dict = nx.maximum_flow(G, "Джерело", "Стік", flow_func=nx.algorithms.flow.edmonds_karp)

print(f"Загальний максимальний потік: {flow_value} одиниць")

# Таблиця потоків: від терміналів до магазинів
results = []

for term in ["Термінал 1", "Термінал 2"]:
    for sklad in flow_dict[term]:
        for shop in flow_dict[sklad]:
            flow = flow_dict[sklad][shop]
            results.append({
                "Термінал": term,
                "Магазин": shop,
                "Фактичний Потік (од.)": flow
            })

# Фільтруємо лише магазини (без нулів, якщо потрібно прибрати — закоментуйте наступний рядок)
results = [row for row in results if row["Фактичний Потік (од.)"] > 0]

# Виводимо таблицю
df = pd.DataFrame(results)
print("\nТаблиця потоків:")
print(df.to_string(index=False))
